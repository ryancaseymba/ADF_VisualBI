{
	"name": "Activity-Model-Dedup-Pipeline",
	"properties": {
		"activities": [
			{
				"name": "Copy Files",
				"type": "Copy",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "DelimitedTextSource",
						"storeSettings": {
							"type": "AzureBlobFSReadSettings",
							"recursive": true,
							"wildcardFolderPath": {
								"value": "@pipeline().parameters.IngestFilePath",
								"type": "Expression"
							},
							"wildcardFileName": "*",
							"enablePartitionDiscovery": false
						},
						"formatSettings": {
							"type": "DelimitedTextReadSettings"
						}
					},
					"sink": {
						"type": "DelimitedTextSink",
						"storeSettings": {
							"type": "AzureBlobFSWriteSettings"
						},
						"formatSettings": {
							"type": "DelimitedTextWriteSettings",
							"quoteAllText": true,
							"fileExtension": ".csv"
						}
					},
					"enableStaging": false,
					"translator": {
						"value": "@pipeline().parameters.ColumnMapping",
						"type": "Expression"
					}
				},
				"inputs": [
					{
						"referenceName": "CSV_DataLake_Dataset",
						"type": "DatasetReference",
						"parameters": {
							"ContainerName": {
								"value": "@pipeline().parameters.IngestDataContainer",
								"type": "Expression"
							},
							"FilePath": {
								"value": "@pipeline().parameters.IngestFilePath",
								"type": "Expression"
							},
							"FileName": "*"
						}
					}
				],
				"outputs": [
					{
						"referenceName": "CSV_DataLake_Dataset",
						"type": "DatasetReference",
						"parameters": {
							"ContainerName": {
								"value": "@pipeline().parameters.ModelDataContainer",
								"type": "Expression"
							},
							"FilePath": {
								"value": "@pipeline().parameters.ModelMinuteFilePath",
								"type": "Expression"
							},
							"FileName": {
								"value": "@pipeline().parameters.ModelTable",
								"type": "Expression"
							}
						}
					}
				]
			},
			{
				"name": "Validate if file exists",
				"type": "GetMetadata",
				"dependsOn": [
					{
						"activity": "Copy Files",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "CSV_DataLake_Dataset",
						"type": "DatasetReference",
						"parameters": {
							"ContainerName": {
								"value": "@pipeline().parameters.ModelDataContainer",
								"type": "Expression"
							},
							"FilePath": {
								"value": "@pipeline().parameters.ModelFilePath",
								"type": "Expression"
							},
							"FileName": {
								"value": "@pipeline().parameters.ModelTable",
								"type": "Expression"
							}
						}
					},
					"fieldList": [
						"exists"
					],
					"storeSettings": {
						"type": "AzureBlobFSReadSettings",
						"recursive": true
					},
					"formatSettings": {
						"type": "DelimitedTextReadSettings"
					}
				}
			},
			{
				"name": "Check If Model Exists",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "Validate if file exists",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@if(not(equals(pipeline().parameters.FullLoadAllTables,true)),if(equals(activity('Validate if file exists').output.exists,true),true,false),false)",
						"type": "Expression"
					},
					"ifFalseActivities": [
						{
							"name": "Dedup And GetWatermark FirstRun Dataflow",
							"type": "ExecuteDataFlow",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"dataflow": {
									"referenceName": "Dedup_GetWaterMark_Dataflow",
									"type": "DataFlowReference",
									"parameters": {
										"ModelTable": {
											"value": "'@{pipeline().parameters.ModelTable}'",
											"type": "Expression"
										},
										"DeltaColumn": {
											"value": "'@{pipeline().parameters.ModelDeltaColumn}'",
											"type": "Expression"
										},
										"SourceTable": {
											"value": "'@{pipeline().parameters.SourceTable}'",
											"type": "Expression"
										},
										"KeyColumns": {
											"value": "'@{pipeline().parameters.KeyColumns}'",
											"type": "Expression"
										}
									},
									"datasetParameters": {
										"Source": {
											"FilePath": {
												"value": "@pipeline().parameters.ModelMinuteFilePath",
												"type": "Expression"
											},
											"ContainerName": {
												"value": "@pipeline().parameters.ModelDataContainer",
												"type": "Expression"
											}
										},
										"CopyDeDuppedData": {
											"FilePath": {
												"value": "@pipeline().parameters.ModelFilePath",
												"type": "Expression"
											},
											"ContainerName": {
												"value": "@pipeline().parameters.ModelDataContainer",
												"type": "Expression"
											}
										},
										"CopyWatermark": {
											"FilePath": {
												"value": "@pipeline().parameters.WatermarkFilePath",
												"type": "Expression"
											},
											"ContainerName": {
												"value": "@pipeline().parameters.IngestDataContainer",
												"type": "Expression"
											}
										}
									}
								},
								"compute": {
									"coreCount": 8,
									"computeType": "General"
								}
							}
						}
					],
					"ifTrueActivities": [
						{
							"name": "Dedup And GetWatermark Dataflow",
							"type": "ExecuteDataFlow",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"dataflow": {
									"referenceName": "Dedup_GetWaterMark_WithExistingData_Dataflow",
									"type": "DataFlowReference",
									"parameters": {
										"ModelTable": {
											"value": "'@{pipeline().parameters.ModelTable}'",
											"type": "Expression"
										},
										"DeltaColumn": {
											"value": "'@{pipeline().parameters.ModelDeltaColumn}'",
											"type": "Expression"
										},
										"SourceTable": {
											"value": "'@{pipeline().parameters.SourceTable}'",
											"type": "Expression"
										},
										"KeyColumns": {
											"value": "'@{pipeline().parameters.KeyColumns}'",
											"type": "Expression"
										}
									},
									"datasetParameters": {
										"Source": {
											"FilePath": {
												"value": "@pipeline().parameters.ModelMinuteFilePath",
												"type": "Expression"
											},
											"ContainerName": {
												"value": "@pipeline().parameters.ModelDataContainer",
												"type": "Expression"
											}
										},
										"ExistingData": {
											"FilePath": {
												"value": "@pipeline().parameters.ModelFilePath",
												"type": "Expression"
											},
											"ContainerName": {
												"value": "@pipeline().parameters.ModelDataContainer",
												"type": "Expression"
											}
										},
										"CopyDeDuppedData": {
											"FilePath": {
												"value": "@pipeline().parameters.ModelFilePath",
												"type": "Expression"
											},
											"ContainerName": {
												"value": "@pipeline().parameters.ModelDataContainer",
												"type": "Expression"
											}
										},
										"CopyWatermark": {
											"FilePath": {
												"value": "@pipeline().parameters.WatermarkFilePath",
												"type": "Expression"
											},
											"ContainerName": {
												"value": "@pipeline().parameters.IngestDataContainer",
												"type": "Expression"
											}
										}
									}
								},
								"compute": {
									"coreCount": 8,
									"computeType": "General"
								}
							}
						}
					]
				}
			}
		],
		"parameters": {
			"IngestFilePath": {
				"type": "string"
			},
			"ModelFilePath": {
				"type": "string"
			},
			"ModelMinuteFilePath": {
				"type": "string"
			},
			"WatermarkFilePath": {
				"type": "string"
			},
			"ModelTable": {
				"type": "string"
			},
			"IsDeltaTable": {
				"type": "string"
			},
			"DeltaColumn": {
				"type": "string"
			},
			"ModelDeltaColumn": {
				"type": "string"
			},
			"IngestDataContainer": {
				"type": "string"
			},
			"ModelDataContainer": {
				"type": "string"
			},
			"ColumnMapping": {
				"type": "object"
			},
			"SourceTable": {
				"type": "string"
			},
			"KeyColumns": {
				"type": "string"
			},
			"FullLoadAllTables": {
				"type": "string"
			}
		},
		"variables": {
			"ConditionCheck": {
				"type": "Boolean"
			}
		},
		"folder": {
			"name": "Activity"
		},
		"annotations": []
	}
}